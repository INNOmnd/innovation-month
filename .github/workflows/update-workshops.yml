name: Workshop JSON Update

on:
  repository_dispatch:
    types: [update_workshops]

# Minimal token scope so the job can push
permissions:
  contents: write

# Ensure only one run at a time; others queue and run sequentially
concurrency:
  group: workshop-json-updates
  cancel-in-progress: false

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "INNOmnd CI"
          git config user.email "233744009+INNOmnd@users.noreply.github.com"

      - name: Ensure we're on latest main
        run: |
          git checkout main
          git pull --rebase origin main

      - name: Prepare content file
        id: prep
        run: |
          CONTENT="${{ github.event.client_payload.content_b64 }}"
          # strip CR/LF/spaces and convert URL-safe b64
          CONTENT=$(echo "$CONTENT" | tr -d '\r\n ' | tr '_-' '/+')

          # Decode and unwrap single/nested arrays
          printf %s "$CONTENT" | base64 -d \
            | jq -c '
                def unwrap:
                  if type=="array" and length==1 and (.[0]|type=="array" or type=="object") then .[0]|unwrap
                  elif type=="array" and (map(type=="array")|all) then add|unwrap
                  else . end;
                unwrap
              ' \
            > tmp.json

          FP="${{ github.event.client_payload.filePath }}"
          mkdir -p "$(dirname "$FP")"
          mv tmp.json "$FP"
          echo "FILEPATH=$FP" >> $GITHUB_OUTPUT

      - name: Rebuild workshops index
        run: |
          mkdir -p data/workshops
          if ls data/workshops/*.json >/dev/null 2>&1; then
            jq -s '[.[] | {id: .id, title: .title}]' data/workshops/*.json > data/workshops/index.json
          else
            echo "[]" > data/workshops/index.json
          fi

      - name: Commit & push to main with retries
        run: |
          set -e
          git add "${{ steps.prep.outputs.FILEPATH }}" data/workshops/index.json
          git commit -m "${{ github.event.client_payload.commitMessage }}" || echo "No changes to commit"

          # Retry push up to 5 times to survive any late races
          n=0
          until [ $n -ge 5 ]
          do
            if git push origin main; then
              echo "Pushed successfully"; break
            fi
            echo "Push failed â€” retrying ($((n+1))/5) after rebase..."
            git pull --rebase --autostash origin main || true
            n=$((n+1))
            sleep 2
          done

          if [ $n -ge 5 ]; then
            echo "ERROR: Could not push after 5 attempts" >&2
            exit 1
          fi
